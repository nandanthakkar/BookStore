---
swagger: "2.0"
info:
  description: "BookStore APIs exposed from a Java EE back-end to an Angular front-end"
  version: "1.0.0"
  title: "BookStore APIs"
  contact:
    name: "Nandan Thakkar"
host: "localhost:8080"
basePath: "/bookstore-back/api"
tags:
- name: "Book"
schemes:
- "http"
- "https"
paths:
  /books:
    get:
      tags:
      - "Book"
      summary: "Return all the books"
      description: ""
      operationId: "getBooks"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Found Books"
        204:
          description: "No Books found"
    post:
      tags:
      - "Book"
      summary: "Create book given a JSON represenation"
      description: ""
      operationId: "createBook"
      consumes:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        201:
          description: "Created book"
        415:
          description: "Format Not JSON"
  /books/count:
    get:
      tags:
      - "Book"
      summary: "Return number of books"
      description: ""
      operationId: "countBooks"
      parameters: []
      responses:
        200:
          description: "Found number of Books"
          schema:
            type: "integer"
            format: "int64"
        204:
          description: "No Books in the database"
  /books/{id}:
    get:
      tags:
      - "Book"
      summary: "return a book given an identifier"
      description: ""
      operationId: "getBook"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        minimum: 1.0
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "Book Found"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid input. ID cannot be lower than 1"
        404:
          description: "Book Not Found"
    delete:
      tags:
      - "Book"
      summary: "Delete book given its ID"
      description: ""
      operationId: "deleteBook"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        minimum: 1.0
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        204:
          description: "Book has been deleted"
        400:
          description: "Invalid input. ID cannot be lower than 1"
        500:
          description: "Book Not Found"
definitions:
  Book:
    type: "object"
    required:
    - "isbn"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Identifier"
      title:
        type: "string"
        description: "Title of the book"
        minLength: 1
        maxLength: 200
      description:
        type: "string"
        description: "Description of the book"
        minLength: 1
        maxLength: 10000
      unitCost:
        type: "number"
        format: "float"
        description: "Unit Cost of the book"
        minimum: 1.0
      isbn:
        type: "string"
        description: "ISBN of the book"
        minLength: 1
        maxLength: 50
      publicationDate:
        type: "string"
        format: "date-time"
        description: "Publication Date of the book"
      nbOfPages:
        type: "integer"
        format: "int32"
        description: "Number of pages of the book"
      imageURL:
        type: "string"
        description: "Image URL of the book"
      language:
        type: "string"
        description: "Language book is written in"
        enum:
        - "ENGLISH"
        - "FRENCH"
        - "SPANISH"
        - "PORTUGUESE"
        - "ITALIAN"
        - "FINISH"
        - "GERMAN"
        - "DEUTSCH"
        - "RUSSIAN"
    description: "Book resource representation"
